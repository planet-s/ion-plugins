# https://github.com/dbbolton
#
# Below are some useful Perl-related aliases/functions that I use with zsh.


# Aliases ###################################################################

# perlbrew ########
alias pbi = 'perlbrew install'
alias pbl = 'perlbrew list'
alias pbo = 'perlbrew off'
alias pbs = 'perlbrew switch'
alias pbu = 'perlbrew use'

# Perl ############

# perldoc`
alias pd = 'perldoc'

# use perl like awk/sed
alias ple = 'perl -wlne'

# show the latest stable release of Perl
alias latest-perl = 'curl -s https://www.perl.org/get.html | perl -wlne '\''if (/perl\-([\d\.]+)\.tar\.gz/) { print $1; exit;}'\'



# Functions #################################################################

# newpl - creates a basic Perl script file and opens it with $EDITOR
fn newpl file:str
	# set $EDITOR to 'vim' if it is undefined
	let EDITOR ?= vim

	# if the file exists, just open it
	if test -e $file
        echo "$file exists; not modifying.\n"
    else
	# if it doesn't, make it, and open it
        echo '#!/usr/bin/perl'"\n"'use strict;'"\n"'use warnings;'"\n\n" > $file
    end
    $EDITOR $file
end


# pgs - Perl Global Substitution
# find pattern		= 1st arg
# replace pattern	= 2nd arg
# filename			= 3rd arg
fn pgs find:str replace:str filename:str
    perl -i.orig -pe 's/'"$find"'/'"$replace"'/g' "$filename"
end


# Perl grep, because 'grep -P' is terrible. Lets you work with pipes or files.
fn prep pattern:str filename:[str]
    perl -nle 'print if /'"$pattern"'/;' @filename
end
