# This plugin starts automatically `ssh-agent` to set up and load whichever
# credentials you want for ssh connections.
# ## Instructions
#
# **IMPORTANT: put these settings _before_ the line that sources this file**
#
# To enable **agent forwarding support** add the following to your initrc file:
#
# ```
# let ssh_agent_forwarding = 1
# ```
#
# To **load identities** use the `ssh_agent_identities` variable, For example:
#
# ```
# let ssh_agent_identities = [ id_rsa id_rsa2 id_github ]
# ```
#
# To **set the maximum lifetime of the identities**, use the `ssh_agent_lifetime` variable.
# The lifetime may be specified in seconds or as described in sshd_config(5)
# (see _TIME FORMATS_). If left unspecified, the default lifetime is forever.
#
# ```
# let ssh_agent_lifetime 4h
# ```
#
# ## Security
#
# To avoid exposing those configs, those variables will be dropped in the config
#
# ## Credits
#
# Based on code from Joseph M. Reagle: https://www.cygwin.com/ml/cygwin/2001-06/msg00537.html
# Agent-forwarding support based on ideas from Florent Thoumie and Jonas Pfenniger

# Get the filename to store/lookup the environment from
let SHORT_HOST = @split($HOST '.')[0]
let _ssh_env_cache = "$HOME/.ssh/environment-$SHORT_HOST"

fn _start_agent
	# start ssh-agent and setup environment
	echo 'Starting ssh-agent...'
    let args = [-s]
    if exists -s ssh_agent_lifetime
      let args ::= [-t $ssh_agent_lifetime]
    end
    let out = $(ssh-agent @args)
    let out = $regex_replace($out 'echo' '#echo')
    let out = $regex_replace($out '([A-Z_]*)=(.*)' 'let $1 = $2')
    echo $out > $_ssh_env_cache
	chmod 600 $_ssh_env_cache
	source $_ssh_env_cache > /dev/null
end

# test if agent-forwarding is enabled
if exists -s ssh_agent_forwarding && bool $ssh_agent_forwarding && exists -s env::SSH_AUTH_SOCK
	# Add a nifty symlink for screen/tmux if agent forwarding
	if not test -L $SSH_AUTH_SOCK
        ln -sf $SSH_AUTH_SOCK /tmp/ssh-agent-$USER-screen
    end
else if test -f $_ssh_env_cache
	# Source SSH settings, if applicable
	source $_ssh_env_cache > /dev/null
    let FILTER = ""
	if eq $USER "root"
		let FILTER = "ax"
	else
		let FILTER = "x"
	end
	if not ps $FILTER | grep ssh-agent | grep -q $SSH_AGENT_PID
		_start_agent
	end
else
	_start_agent
end

# check for .ssh folder presence
if not test -d $HOME/.ssh
    return
end

let ssh_agent_identities ?= []
let loaded_sigs loaded_ids not_loaded = [] [] []

# add default keys if no identities were set up via zstyle
# this is to mimic the call to ssh-add with no identities
if eq $len(@ssh_agent_identities) 0
    # key list found on `ssh-add` man page's DESCRIPTION section
    for id in id_rsa id_dsa id_ecdsa id_ed25519 identity
        # check if file exists
        if test -f "$HOME/.ssh/$id"
            let ssh_agent_identities ::= $id
        end
    end
end

# get list of loaded identities' signatures and filenames
for line in @split($(ssh-add -l) '\n')
    let loaded_sigs ::= @split($line ' ')[1]
    let loaded_ids ::= @split($line ' ')[2]
end

# add identities if not already loaded
for id in @ssh_agent_identities
    # check for filename match, otherwise try for signature match
    if not contains $id @loaded_ids
        let sig = $(ssh-keygen -lf "$HOME/.ssh/$id" | awk '{print $2}')
        if not contains $sig @loaded_sigs
            let not_loaded ::= "$HOME/.ssh/$id"
        end
    end
end

if not eq 0 $len(@not_loaded)
    ssh-add @not_loaded
end

if exists -s ssh_agent_identities
  drop ssh_agent_identities
end
if exists -s ssh_agent_forwarding
  drop ssh_agent_forwarding
end
if exists -s ssh_agent_lifetime
  drop ssh_agent_lifetime
end
drop _ssh_env_cache
