# ------------------------------------------------------------------------------
# Description
# -----------
#
# This is one for the system administrator, operation and maintenance.
#
# ------------------------------------------------------------------------------
# Authors
# -------
#
# * Dongweiming <ciici123@gmail.com>
#
# ------------------------------------------------------------------------------

fn retlog log:str
    echo $or($log '/var/log/nginx/access.log')
end

alias ping = 'ping -c 5'
alias clr = 'clear; echo Currently logged in on $(tty), as $USER in directory $PWD.'
alias mkdir = 'mkdir -pv'
# get top process eating memory
alias psmem = 'ps -e -orss=,args= | sort -b -k1,1n'
alias psmem10 = 'ps -e -orss=,args= | sort -b -k1,1n| head -10'
# get top process eating cpu if not work try excute : export LC_ALL='C'
alias pscpu = 'ps -e -o pcpu,cpu,nice,state,cputime,args|sort -k1 -nr'
alias pscpu10 = 'ps -e -o pcpu,cpu,nice,state,cputime,args|sort -k1 -nr | head -10'

# directory LS
alias dls = 'ls -1 -d */'
alias psgrep = 'ps aux | grep '

# Kills any process that matches a regexp passed to it
fn killit process:str
    ps aux | grep -v "grep" | grep $process | awk '{print $2}' | xargs sudo kill
end

# list contents of directories in a tree-like format
if not which tree &> /dev/null
    fn tree params:[str]
        find @params -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
    end
end

# Sort connection state
alias sortcons = "netstat -nat |awk '{print \$6}'|sort|uniq -c|sort -rn"

# View all 80 Port Connections
alias con80 = 'netstat -nat|grep -i ":80"|wc -l'

# On the connected IP sorted by the number of connections
fn sortconip
    cnetstat -ntu | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -n
end

# top20 of Find the number of requests on 80 port
fn req20
    netstat -anlp|grep 80|grep tcp|awk '{print $5}'|awk -F: '{print $1}'|sort|uniq -c|sort -nr|head -n20
end

# top20 of Using tcpdump port 80 access to view
fn http20
    sudo tcpdump -i eth0 -tnn dst port 80 -c 1000 | awk -F"." '{print $1"."$2"."$3"."$4}' | sort | uniq -c | sort -nr |head -20
end

# top20 of Find time_wait connection
fn timewait20
    netstat -n|grep TIME_WAIT|awk '{print $5}'|sort|uniq -c|sort -rn|head -n20
end

# top20 of Find SYN connection
fn syn20
    netstat -an | grep SYN | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | sort -nr|head -n20
end

# Printing process according to the port number
fn port_pro $port
    netstat -ntlp | grep $or($port '.') | awk '{print $7}' | cut -d/ -f1
end

# top10 of gain access to the ip address
fn accessip10
    awk '{counts[$(11)]+=1}; END {for(url in counts) print counts[url], url}' "$(retlog)"
end

# top20 of Most Visited file or page
fn visitpage20
    awk '{print $11}' "$(retlog)"|sort|uniq -c|sort -nr|head -20
end

# top100 of Page lists the most time-consuming (more than 60 seconds) as well as the corresponding page number of occurrences
fn consume100
    awk '($NF > 60 && $7~/\.php/){print $7}' "$(retlog)" |sort -n|uniq -c|sort -nr|head -100
    # if django website or other webiste make by no suffix language
    # awk '{print $7}' "$(retlog)" |sort -n|uniq -c|sort -nr|head -100
end

# Website traffic statistics (G)
fn webtraffic
    awk '{sum+=$10} END {print sum/1024/1024/1024}' '$(retlog)'
end

# Statistical connections 404
fn c404
    awk '($9 ~/404/)' "$(retlog)" | awk '{print $9,$7}' | sort
end

# Statistical http status.
fn httpstatus
    awk '{counts[$(9)]+=1}; END {for(code in counts) print code, counts[code]}' "$(retlog)"
end

# Delete 0 byte file
fn d0 directory:str
    find $or($directory '.') -type f -size 0 -exec rm -rf {} \;
end

# gather external ip address
fn geteip
    curl -s -S https://icanhazip.com
end

# determine local IP address(es)
fn getip
    if which ip &> /dev/null
        ip addr | awk '/inet /{print $2}' | command grep -v 127.0.0.1
    else
        ifconfig | awk '/inet /{print $2}' | command grep -v 127.0.0.1
    end
end

# Clear zombie processes
fn clrz
    ps -eal | awk '{ if ($2 == "Z") {print $4}}' | kill -9
end

# Second concurrent
fn conssec
    awk '{if($9~/200|30|404/)COUNT[$4]++}END{for( a in COUNT) print a,COUNT[a]}' "$(retlog)"|sort -k 2 -nr|head -n10
end
